version: '3.9'

services:
  nginx:
    image: nginx:1.21
    restart: always
    ports:
      - 80:80
      - 443:443
    depends_on:
      - upload_service
    volumes:
      - ./etc/nginx:/etc/nginx

  # db:
  #   image: mongo:5.0
  #   restart: on-failure
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - db:/data/db
  #   env_file:
  #     - mongodb.env

  minio:
    image: bitnami/minio:latest
    restart: on-failure
    ports:
      - 9000:9000
      - 9001:9001
    env_file:
      - minio.env
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 10s
      timeout: 20s
      retries: 5

  upload_service:
    image: ghcr.io/opnsnap/upload-service:main
    restart: on-failure
    expose:
      - 8080
    env_file:
      - minio.env
    depends_on:
      minio:
        condition: service_healthy
  # es01:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
  #   container_name: es01
  #   ports:
  #     - 9200:9200
  #   environment:
  #     - node.name=es01
  #     # - bootstrap.memory_lock=true
  #     # - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - elastic_data:/usr/share/elasticsearch/data
  #   networks:
  #     - elastic

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.1.2
  #   environment:
  #     ELASTICSEARCH_URL: http://es01:9200
  #     ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
  #   ports:
  #     - 5601:5601
  #   networks:
  #     - elastic

volumes:
  db: {}
  # networks:
  #   elastic:
  #     driver: bridge
